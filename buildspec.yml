version: 0.2

phases:
  install:
    - echo Installing app dependencies...
    - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl   
    - chmod +x ./kubectl
    - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
    - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
    - source ~/.bashrc
    - echo 'Check kubectl version'
    - kubectl version --short --client
    - chmod +x prereqs.sh
    - sh prereqs.sh
    runtime-versions:
        nodejs: 16
  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region us-east-2 update-kubeconfig --name cicd-demo
      - echo check config 
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 063575941317.dkr.ecr.us-east-2.amazonaws.com
      - REPOSITORY_URI=$063575941317.dkr.ecr.us-east-2.amazonaws.com/cicd-demo
      - docker pull $REPOSITORY_URI:latest
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build --cache-from $REPOSITORY_URI:latest -t $IMAGE_REPO_NAME:latest .
      - docker tag cicd-demo:latest 063575941317.dkr.ecr.us-east-2.amazonaws.com/cicd-demo:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 063575941317.dkr.ecr.us-east-2.amazonaws.com/cicd-demo:latest
      - echo Push the latest image to cluster
      - kubectl apply -f deployment.yaml
      - kubectl rollout restart -f deployment.yaml
      - printf '[{"name":"eks-deployment","imageUri":"%s"}]' $REPOSITORY:$TAG > build.json
artifacts:
    files: build.json
